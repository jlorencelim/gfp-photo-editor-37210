{"version":3,"file":"static/js/789.197a158e.chunk.js","mappings":"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","sources":["components/PageTitle/index.tsx","content/pages/Components/Badges/index.tsx"],"sourcesContent":["import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport { Typography, Button, Grid } from '@mui/material';\n\ninterface PageTitleProps {\n  heading?: string;\n  subHeading?: string;\n  docs?: string;\n}\n\nconst PageTitle: FC<PageTitleProps> = ({\n  heading = '',\n  subHeading = '',\n  docs = '',\n  ...rest\n}) => {\n  return (\n    <Grid\n      container\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      {...rest}\n    >\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          {heading}\n        </Typography>\n        <Typography variant=\"subtitle2\">{subHeading}</Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          href={docs}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          sx={{ mt: { xs: 2, md: 0 } }}\n          variant=\"contained\"\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n        >\n          {heading} Documentation\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nPageTitle.propTypes = {\n  heading: PropTypes.string,\n  subHeading: PropTypes.string,\n  docs: PropTypes.string\n};\n\nexport default PageTitle;\n","import { Helmet } from 'react-helmet-async';\nimport PageTitle from 'src/components/PageTitle';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport {\n  Container,\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider\n} from '@mui/material';\nimport { useState } from 'react';\nimport Footer from 'src/components/Footer';\n\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport MailIcon from '@mui/icons-material/Mail';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Badge from '@mui/material/Badge';\n\nconst shapeStyles = { bgcolor: 'primary.main', width: 40, height: 40 };\nconst shapeCircleStyles = { borderRadius: '50%' };\nconst rectangle = <Box component=\"span\" sx={shapeStyles} />;\nconst circle = (\n  <Box component=\"span\" sx={{ ...shapeStyles, ...shapeCircleStyles }} />\n);\n\nfunction Badges() {\n  const [count, setCount] = useState(1);\n  const [invisible, setInvisible] = useState(false);\n\n  const handleBadgeVisibility = () => {\n    setInvisible(!invisible);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Badges - Components</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageTitle\n          heading=\"Badges\"\n          subHeading=\"Badge generates a small badge to the top-right of its child(ren).\"\n          docs=\"https://material-ui.com/components/badges/\"\n        />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <Card>\n              <CardHeader title=\"Shapes\" />\n              <Divider />\n              <CardContent>\n                <Stack spacing={3} direction=\"row\">\n                  <Badge color=\"secondary\" badgeContent=\" \">\n                    {rectangle}\n                  </Badge>\n                  <Badge color=\"secondary\" badgeContent=\" \" variant=\"dot\">\n                    {rectangle}\n                  </Badge>\n                  <Badge color=\"secondary\" overlap=\"circular\" badgeContent=\" \">\n                    {circle}\n                  </Badge>\n                  <Badge\n                    color=\"secondary\"\n                    overlap=\"circular\"\n                    badgeContent=\" \"\n                    variant=\"dot\"\n                  >\n                    {circle}\n                  </Badge>\n                </Stack>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12}>\n            <Card>\n              <CardHeader title=\"Badges Visibility\" />\n              <Divider />\n              <CardContent>\n                <Box\n                  sx={{\n                    color: 'action.active',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    '& > *': {\n                      marginBottom: 2\n                    },\n                    '& .MuiBadge-root': {\n                      marginRight: 4\n                    }\n                  }}\n                >\n                  <div>\n                    <Badge color=\"secondary\" badgeContent={count}>\n                      <MailIcon />\n                    </Badge>\n                    <ButtonGroup>\n                      <Button\n                        aria-label=\"reduce\"\n                        onClick={() => {\n                          setCount(Math.max(count - 1, 0));\n                        }}\n                      >\n                        <RemoveIcon fontSize=\"small\" />\n                      </Button>\n                      <Button\n                        aria-label=\"increase\"\n                        onClick={() => {\n                          setCount(count + 1);\n                        }}\n                      >\n                        <AddIcon fontSize=\"small\" />\n                      </Button>\n                    </ButtonGroup>\n                  </div>\n                  <div>\n                    <Badge\n                      color=\"secondary\"\n                      variant=\"dot\"\n                      invisible={invisible}\n                    >\n                      <MailIcon />\n                    </Badge>\n                    <FormControlLabel\n                      sx={{ color: 'text.primary' }}\n                      control={\n                        <Switch\n                          checked={!invisible}\n                          onChange={handleBadgeVisibility}\n                        />\n                      }\n                      label=\"Show Badge\"\n                    />\n                  </div>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12}>\n            <Card>\n              <CardHeader title=\"Colors\" />\n              <Divider />\n              <CardContent>\n                <Stack spacing={2} direction=\"row\">\n                  <Badge badgeContent={4} color=\"secondary\">\n                    <MailIcon color=\"action\" />\n                  </Badge>\n                  <Badge badgeContent={4} color=\"success\">\n                    <MailIcon color=\"action\" />\n                  </Badge>\n                </Stack>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default Badges;\n"],"names":["_ref","_ref$heading","heading","_ref$subHeading","subHeading","_ref$docs","docs","rest","_objectWithoutProperties","_excluded","_jsxs","Grid","_objectSpread","container","justifyContent","alignItems","children","item","_jsx","Typography","variant","component","gutterBottom","Button","href","target","rel","sx","mt","xs","md","startIcon","AddTwoToneIcon","fontSize","shapeStyles","bgcolor","width","height","rectangle","Box","circle","borderRadius","_useState","useState","_useState2","_slicedToArray","count","setCount","_useState3","_useState4","invisible","setInvisible","_Fragment","Helmet","PageTitleWrapper","PageTitle","Container","maxWidth","direction","spacing","Card","CardHeader","title","Divider","CardContent","Stack","Badge","color","badgeContent","overlap","display","flexDirection","marginBottom","marginRight","MailIcon","ButtonGroup","onClick","Math","max","RemoveIcon","AddIcon","FormControlLabel","control","Switch","checked","onChange","label","Footer"],"sourceRoot":""}