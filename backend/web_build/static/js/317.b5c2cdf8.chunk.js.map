{"version":3,"file":"static/js/317.b5c2cdf8.chunk.js","mappings":"qTAkBcA,EAAAA,EAAAA,KAEC,SAASC,IAEtB,IAAAC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,GAAFF,EAAA,GAAYA,EAAA,IAC1BG,GAAkCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA5BE,GAAFD,EAAA,GAAcA,EAAA,IAC9BE,GAAgDP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAtCE,GAAFD,EAAA,GAAqBA,EAAA,IAEpCE,GADUC,EAAAA,EAAAA,MAAVC,MACAF,WAWRG,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,IAEH,IAAMA,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGI,OAHJF,EAAAC,KAAA,EAEpBrB,GAAW,GACLiB,GAAQM,EAAAA,EAAAA,MAAUH,EAAAE,KAAA,GACNE,EAAAA,EAAAA,IAAYC,EAAAA,GAAYR,GAAO,KAAD,EAA1CC,EAAGE,EAAAM,KACTvB,EAAae,GACbS,QAAQC,IAAI,aAAcV,GAAIE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,UAE9BU,EAAAA,EAAAA,IAAQV,EAAAS,IAAI,QAEM,OAFNT,EAAAC,KAAA,GAEZrB,GAAW,GAAOoB,EAAAW,OAAA,6BAAAX,EAAAY,OAAA,GAAAhB,EAAA,yBAErB,kBAZoB,OAAAJ,EAAAqB,MAAA,KAAAC,UAAA,KAcfC,EAAM,IAAIC,MAIhB,OAHAD,EAAIE,IAAM9B,EAAU+B,MACpBX,QAAQC,IAAI,QAASrB,EAAU+B,QAG7BC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAAAF,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBAETC,EAAAA,EAAAA,KAACE,EAAAA,GAAW,KAEZF,EAAAA,EAAAA,KAACG,EAAAA,EAAgB,KAGjBH,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CAACC,GAAI,CAAEC,GAAI,GAAKC,SAAS,KAAIR,UAErCC,EAAAA,EAAAA,KAACQ,EAAAA,GAAoB,CACnBC,OAAQhB,EACRiB,kBAAmB,CACjBC,KAAM,WAERC,OAAQ,SAACC,EAAmBC,GAAW,OACrC7B,QAAQC,IAAI,QAAS2B,EAAmBC,EAAY,EAEtDC,QA/Ce,WACrBnD,GAAoB,EACtB,EA8CQoD,KAAM,CAAEC,KAAM,gBACdC,OAAQ,CAAEC,MAAO,GAAIC,cAAe,UACpCC,KAAM,CACJC,aAAc,CACZ,CACEC,SAAU,YACVC,eAAgB,MAChBC,MAAO,SAET,CACEF,SAAU,cACVC,eAAgB,OAChBC,MAAO,WAGXC,eAAgB,CACd,CACEH,SAAU,cACVI,OAAQ,CACN,CACEJ,SAAU,WACVK,MAAO,CACL,CACEL,SAAU,UACVM,MAAO,IACPC,OAAQ,IACRN,eAAgB,iBAElB,CACED,SAAU,aACVM,MAAO,IACPC,OAAQ,IACRN,eAAgB,0BAQ9BO,QAAS,CAACC,EAAAA,GAAAA,OAAaA,EAAAA,GAAAA,SAAeA,EAAAA,GAAAA,SACtCC,aAAcD,EAAAA,GAAAA,SACdE,cAAeC,EAAAA,GAAAA,KACfC,iBAAkB,EAAGC,kBAAmB,QAIlD,C","sources":["content/applications/PhotoUpload/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { errorMsg, getToken } from 'src/config/helper';\nimport { get_photos } from 'src/config/WebServices';\nimport { getResource } from 'src/config/SimpleApis';\n\nimport FilerobotImageEditor, {\n  TABS,\n  TOOLS,\n} from 'react-filerobot-image-editor';\nimport { Helmet } from 'react-helmet-async';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport Container from '@mui/material/Container';\nimport { useLocation } from 'react-router';\n\n\nconst theme = createTheme();\n\nexport default function Album() {\n\n  const [loading, setLoading] = useState(false);\n  const [allImages, setAllImages] = useState([]);\n  const [isImgEditorShown, setIsImgEditorShown] = useState(false);\n  const { state } = useLocation();\n  const { imageData } = state as any;\n\n\n  const openImgEditor = () => {\n    setIsImgEditorShown(true);\n  };\n\n  const closeImgEditor = () => {\n    setIsImgEditorShown(false);\n  };\n\n  useEffect(() => {\n    handleGetPhotos();\n  }, []);\n\n  const handleGetPhotos = async () => {\n    try {\n      setLoading(true);\n      const token = getToken();\n      const res = await getResource(get_photos, token);\n      setAllImages(res);\n      console.log(\"get photos\", res)\n    } catch (e) {\n      errorMsg(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const img = new Image(); // Image constructor\n  img.src = imageData.photo;\n  console.log(\"state\", imageData.photo)\n\n  return (\n    <>\n\n      <Helmet>\n        <title>GFP - Home</title>\n      </Helmet>\n      <CssBaseline />\n      {/* End hero unit */}\n      <PageTitleWrapper>\n      </PageTitleWrapper>\n\n      <Container sx={{ py: 1 }} maxWidth=\"md\">\n\n        <FilerobotImageEditor\n          source={img}\n          annotationsCommon={{\n            fill: '#ff0000',\n          }}\n          onSave={(editedImageObject, designState) =>\n            console.log('saved', editedImageObject, designState)\n          }\n          onClose={closeImgEditor}\n          Text={{ text: 'Filerobot...' }}\n          Rotate={{ angle: 90, componentType: 'slider' }}\n          Crop={{\n            presetsItems: [\n              {\n                titleKey: 'classicTv',\n                descriptionKey: '4:3',\n                ratio: \"4 / 3\",\n              },\n              {\n                titleKey: 'cinemascope',\n                descriptionKey: '21:9',\n                ratio: \"21 / 9\",\n              },\n            ],\n            presetsFolders: [\n              {\n                titleKey: 'socialMedia',\n                groups: [\n                  {\n                    titleKey: 'facebook',\n                    items: [\n                      {\n                        titleKey: 'profile',\n                        width: 180,\n                        height: 180,\n                        descriptionKey: 'fbProfileSize',\n                      },\n                      {\n                        titleKey: 'coverPhoto',\n                        width: 820,\n                        height: 312,\n                        descriptionKey: 'fbCoverPhotoSize',\n                      },\n                    ],\n                  },\n                ],\n              },\n            ],\n          }}\n          tabsIds={[TABS.ADJUST, TABS.ANNOTATE, TABS.FILTERS]} // or {['Adjust', 'Annotate', 'Watermark']}\n          defaultTabId={TABS.ANNOTATE} // or 'Annotate'\n          defaultToolId={TOOLS.TEXT} // or 'Text'\n          savingPixelRatio={0} previewPixelRatio={0} />\n      </Container>\n    </>\n  );\n}\n"],"names":["createTheme","Album","_useState","useState","_useState2","_slicedToArray","setLoading","_useState3","_useState4","setAllImages","_useState5","_useState6","setIsImgEditorShown","imageData","useLocation","state","useEffect","handleGetPhotos","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","res","wrap","_context","prev","next","getToken","getResource","get_photos","sent","console","log","t0","errorMsg","finish","stop","apply","arguments","img","Image","src","photo","_jsxs","_Fragment","children","_jsx","Helmet","CssBaseline","PageTitleWrapper","Container","sx","py","maxWidth","FilerobotImageEditor","source","annotationsCommon","fill","onSave","editedImageObject","designState","onClose","Text","text","Rotate","angle","componentType","Crop","presetsItems","titleKey","descriptionKey","ratio","presetsFolders","groups","items","width","height","tabsIds","TABS","defaultTabId","defaultToolId","TOOLS","savingPixelRatio","previewPixelRatio"],"sourceRoot":""}